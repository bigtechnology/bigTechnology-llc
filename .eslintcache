[{"C:\\Users\\bigri\\Documents\\bigTech\\bigtechnology-llc\\src\\index.tsx":"1","C:\\Users\\bigri\\Documents\\bigTech\\bigtechnology-llc\\src\\reportWebVitals.ts":"2","C:\\Users\\bigri\\Documents\\bigTech\\bigtechnology-llc\\src\\App.tsx":"3","C:\\Users\\bigri\\Documents\\bigTech\\bigtechnology-llc\\src\\components\\pages\\ContactPage\\index.ts":"4","C:\\Users\\bigri\\Documents\\bigTech\\bigtechnology-llc\\src\\components\\pages\\ContactPage\\ContactUsContainer.tsx":"5","C:\\Users\\bigri\\Documents\\bigTech\\bigtechnology-llc\\src\\components\\pages\\ContactPage\\RenderContactUs.tsx":"6","C:\\Users\\bigri\\Documents\\bigTech\\bigtechnology-llc\\src\\components\\pages\\ContactPage\\ContactUsForm.tsx":"7","C:\\Users\\bigri\\Documents\\bigTech\\bigtechnology-llc\\src\\components\\common\\index.ts":"8","C:\\Users\\bigri\\Documents\\bigTech\\bigtechnology-llc\\src\\components\\common\\Input\\index.ts":"9","C:\\Users\\bigri\\Documents\\bigTech\\bigtechnology-llc\\src\\components\\common\\Input\\Input.tsx":"10"},{"size":479,"mtime":1614809658551,"results":"11","hashOfConfig":"12"},{"size":425,"mtime":1613605609426,"results":"13","hashOfConfig":"12"},{"size":221,"mtime":1614809642338,"results":"14","hashOfConfig":"12"},{"size":62,"mtime":1614809654301,"results":"15","hashOfConfig":"12"},{"size":276,"mtime":1614809639510,"results":"16","hashOfConfig":"12"},{"size":376,"mtime":1614821848435,"results":"17","hashOfConfig":"12"},{"size":1080,"mtime":1614900958277,"results":"18","hashOfConfig":"12"},{"size":26,"mtime":1614820885746,"results":"19","hashOfConfig":"12"},{"size":45,"mtime":1614820353045,"results":"20","hashOfConfig":"12"},{"size":2128,"mtime":1614882909802,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"ul3vjq",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"41"},"C:\\Users\\bigri\\Documents\\bigTech\\bigtechnology-llc\\src\\index.tsx",[],[],"C:\\Users\\bigri\\Documents\\bigTech\\bigtechnology-llc\\src\\reportWebVitals.ts",["47"],"import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","C:\\Users\\bigri\\Documents\\bigTech\\bigtechnology-llc\\src\\App.tsx",["48"],"import React from 'react';\nimport './App.css';\nimport { ContactUs } from './components/pages/ContactPage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ContactUs />\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\bigri\\Documents\\bigTech\\bigtechnology-llc\\src\\components\\pages\\ContactPage\\index.ts",[],"C:\\Users\\bigri\\Documents\\bigTech\\bigtechnology-llc\\src\\components\\pages\\ContactPage\\ContactUsContainer.tsx",[],"C:\\Users\\bigri\\Documents\\bigTech\\bigtechnology-llc\\src\\components\\pages\\ContactPage\\RenderContactUs.tsx",[],"C:\\Users\\bigri\\Documents\\bigTech\\bigtechnology-llc\\src\\components\\pages\\ContactPage\\ContactUsForm.tsx",["49"],"C:\\Users\\bigri\\Documents\\bigTech\\bigtechnology-llc\\src\\components\\common\\index.ts",[],[],"C:\\Users\\bigri\\Documents\\bigTech\\bigtechnology-llc\\src\\components\\common\\Input\\index.ts",[],"C:\\Users\\bigri\\Documents\\bigTech\\bigtechnology-llc\\src\\components\\common\\Input\\Input.tsx",["50"],"import React, { useState } from 'react';\r\nimport { RegisterOptions, UseFormMethods } from 'react-hook-form';\r\nimport { AiOutlineEye, AiOutlineEyeInvisible } from 'react-icons/ai';\r\n\r\nconst Input = ({\r\n  id,\r\n  label,\r\n  name,\r\n  register,\r\n  type = 'text',\r\n  rules = {},\r\n  errors = {},\r\n  showPassword,\r\n  placeHolder = '',\r\n  ...rest\r\n}: InputProps): React.ReactElement => {\r\n  // Store the type prop in state so it can change to show/hide the value for passwords\r\n  const [inputType, setInputType] = useState(type);\r\n\r\n  /**\r\n   * Functionality to toggle the show/hide password\r\n   */\r\n  const toggleHiddenPassword = (event: React.MouseEvent) => {\r\n    event.preventDefault();\r\n    setInputType((prevType) => (prevType === 'password' ? 'text' : 'password'));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <label htmlFor={id}>{label}</label>\r\n      <div className=\"input-field\">\r\n        <input\r\n          id={id}\r\n          name={name}\r\n          type={inputType}\r\n          ref={register && register(rules)}\r\n          autoComplete=\"off\"\r\n          autoCapitalize=\"off\"\r\n          placeholder={placeHolder}\r\n          {...rest}\r\n        />\r\n        {showPassword ? (\r\n          <button\r\n            type=\"button\"\r\n            className=\"show-hide-btn\"\r\n            tabIndex={-1} // Prevent button from being selected if user presses tab\r\n            onClick={toggleHiddenPassword}\r\n          >\r\n            {inputType === 'password' ? (\r\n              <AiOutlineEye />\r\n            ) : (\r\n              <AiOutlineEyeInvisible />\r\n            )}\r\n          </button>\r\n        ) : null}\r\n      </div>\r\n      <div className=\"message\">\r\n        <span className=\"red\">*</span>{' '}\r\n        {errors[name] ? errors[name].message : ''}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface InputProps\r\n  extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'type'> {\r\n  id: string;\r\n  name: string;\r\n  label: string;\r\n  register?: UseFormMethods['register'];\r\n  type?: string;\r\n  rules?: RegisterOptions;\r\n  errors?: UseFormMethods['errors'];\r\n  showPassword?: boolean;\r\n  placeHolder?: string;\r\n  ref?: any;\r\n}\r\n\r\nexport default Input;\r\n",{"ruleId":"51","severity":1,"message":"52","line":3,"column":25,"nodeType":"53","messageId":"54","endLine":3,"endColumn":57},{"ruleId":"51","severity":1,"message":"52","line":5,"column":1,"nodeType":"55","messageId":"54","endLine":5,"endColumn":15},{"ruleId":"56","severity":1,"message":"57","line":42,"column":11,"nodeType":"58","messageId":"59","endLine":42,"endColumn":20},{"ruleId":"60","severity":1,"message":"61","line":76,"column":9,"nodeType":"62","messageId":"63","endLine":76,"endColumn":12,"suggestions":"64"},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","FunctionDeclaration","@typescript-eslint/no-unused-vars","'IFormData' is defined but never used.","Identifier","unusedVar","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["65","66"],{"messageId":"67","fix":"68","desc":"69"},{"messageId":"70","fix":"71","desc":"72"},"suggestUnknown",{"range":"73","text":"74"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"73","text":"75"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[2094,2097],"unknown","never"]